logging:
  pattern:
    console: ${LOG_PATTERN_CONSOLE:%green(%d{dd-MMM-yyyy HH:mm:ss.SSS}) %blue(%-5level) %red([ %thread ]) %yellow(%logger{ 15 }) - %msg%n}}

--- ###Profile
spring:
  config:
    activate:
      on-profile: prod

--- ###Datasource
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

  # hibernate
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: ${SPRING_PROPERTIES_HIBERNATE_SHOW_SQL:false}
        format_sql: ${SPRING_PROPERTIES_HIBERNATE_FORMAT_SQL:false}
    hibernate:
      ddl-auto: validate

  # flyway
  flyway:
    baseline-on-migrate: true
    enabled: true

--- ###File
spring:
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

file:
  storage:
    location: ${FILE_UPLOAD_LOCATION:/home/simi/uploads}

ftp:
  host: ${FTP_HOST}
  username: ${FTP_USERNAME}
  password: ${FTP_PASSWORD}

s3:
  bucket: c567062
  endpointUrl: ${S3_ENDPOINT_URL:c567062.parspack.net}
  accessKey: ${S3_ACCESS_KEY:ZGxnMRgbfHdakpAE}
  secretKey: ${S3_SECRET_KEY:mC8Se7MaRnSkHAhzydzELb3sWsbCBCpY}

--- ###Custom Variables
token:
  jwt:
    expires_in: 1440 # Token expiration time in minutes (1440 minutes = 24 hours)
